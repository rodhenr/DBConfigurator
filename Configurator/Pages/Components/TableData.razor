@inject NavigationManager NavigationManager

<div class="table-data-container">

    @if (SelectedTableName == "0")
    {
        <p>Nothing to show</p>
    }
    else
    {
        <h2>@SelectedTableName</h2>
        <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium" OnClick="NavigateToInsertPage"/>
        <MudSimpleTable FixedHeader="true" Dense="true" Hover="true" Bordered="true" Style="overflow-x: auto;">
            <thead>
            <tr>
                @foreach (var name in TableHeaders!)
                {
                    <td>@name</td>
                }
                <td>Edit</td>
                <td>Remove</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var row in TableDataValues!)
            {
                <tr>
                    @foreach (var item in row)
                    {
                        <td>@item.Value</td>
                    }
                    <td class="special-table-column">
                        <MudIconButton Icon="@Icons.Material.Filled.ModeEdit" Variant="@Variant.Filled" Color="@Color.Primary" Size="@Size.Small" OnClick="@(() => OnEdit(row))"/>
                    </td>
                    <td class="special-table-column">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="@Variant.Filled" Color="@Color.Primary" Size="@Size.Small" OnClick="@(() => OnRemove(row))"/>
                    </td>
                </tr>
            }
            </tbody>
        </MudSimpleTable>
    }
</div>

@code {

    [Parameter]
    public string? SelectedTableName { get; set; }

    [Parameter]
    public List<string>? TableHeaders { get; set; }

    [Parameter]
    public List<Dictionary<string, string>>? TableDataValues { get; set; }

    [Parameter]
    public EventCallback<string> SelectedTableNameChanged { get; set; }

    private async Task OnRemove(Dictionary<string, string> e)
    {
    }

    private async Task OnEdit(Dictionary<string, string> e)
    {
    }

    private void NavigateToInsertPage()
    {
        NavigationManager.NavigateTo($"/add?tableName={SelectedTableName}");
    }
}